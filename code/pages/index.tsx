import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '../styles/Home.module.css'
import { useState, useEffect } from 'react'


const inter = Inter({ subsets: ['latin'] })
// import { Grid } from '@giphy/react-components'
import { IGif } from '@giphy/js-types'


import { GiphyFetch } from '@giphy/js-fetch-api'
import Button from '../components/Button';
import GIF from '../components/Gif';
import Grid from '../components/Grid';
import SearchBar from '../components/SearchBar';

const viewStates = ['initial', 'search', 'grid', 'detail'];

export default function Home() {
  const [screenState, setScreenState] = useState(viewStates[0]);
  const [buttonText, setButtonText] = useState("GIF");
  const [buttonState, setButtonState] = useState(true);
  const [searchState, setSearchState] = useState(false);
  const [searchContent, setSearchContent] = useState("OMG");
  const [gifs, setGifs] = useState<any | null>(null);
  const [selectedGIF, setSelectedGIF] = useState<any | null>(null);

  const gf = new GiphyFetch(process.env.GIPHY_API_KEY as string)

  let gifArray = [] as any;
  const fetchGifs = () => {
    gf.search(searchContent, { sort: 'relevant', limit: 12 }).then(result => {
      gifArray = result.data.map((e, i) => { return <GIF src={e.images.original.url} key={i} /> });
      setGifs(gifArray)
    })
  }

  const handleSearchContent = (content: string) => {
    setSearchContent(content);
    fetchGifs();
  };

  const handleGIFClick = (event: any) => {
    setSearchState(false)
    let selectedGIF = <GIF src={event.target.currentSrc} key={1} />
    setSelectedGIF(selectedGIF)
    gifArray = []
    setGifs(gifArray)
  };

  const handleButtonClick = () => {
    if (buttonState) {
      setSearchState(true)
      setSelectedGIF(null)
      setButtonText("X");
      setButtonState(!buttonState)
    }
    else {
      setSearchState(false)
      setButtonText("GIF");
      setSelectedGIF(null)
      setButtonState(!buttonState)
    }
  }
  useEffect(() => {
    // fetchGifs();
  }, [])

  return (
    <>
      <Head>
        <title>Giphy Coding Challenge</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* <Grid width={1400} columns={3} fetchGifs={fetchGifs} /> */}

      <main className={styles.main}>
        {searchState && <SearchBar content={searchContent} onChange={handleSearchContent} />}
        {selectedGIF ? selectedGIF : <Grid gifs={gifs} onClick={handleGIFClick} />}
        <Button state={buttonState} text={buttonText} onClick={handleButtonClick} />

      </main>
    </>
  )
}
